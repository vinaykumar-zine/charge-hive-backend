spring.application.name=API-GATEWAY
server.port=8080


# --- Global CORS Configuration ---
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowed-origins=http://localhost:5173
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowed-methods=GET,POST,PUT,DELETE,OPTIONS
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allowed-headers=*
spring.cloud.gateway.server.webflux.globalcors.cors-configurations.[/**].allow-credentials=true

spring.profiles.include=secret

eureka.client.service-url.defaultZone=http://localhost:8761/eureka
spring.cloud.discovery.enabled=true
spring.cloud.gateway.server.webflux.discovery.locator.enabled=true

# When no route matches, the gateway's default behavior is to look for a static file
spring.cloud.gateway.server.webflux.routes[0].id=admin-service
spring.cloud.gateway.server.webflux.routes[0].uri=lb://ADMIN-SERVICE
spring.cloud.gateway.server.webflux.routes[0].predicates[0]=Path=/api/admin/**
spring.cloud.gateway.server.webflux.routes[0].filters[0]=RewritePath=/api(?<segment>.*), ${segment}

#Spring Cloud Gateway combines all predicates for a single route using a logical AND.
#This means that for a request to match a route, all of its predicates must be true.

spring.cloud.gateway.server.webflux.routes[1].id=station-service
spring.cloud.gateway.server.webflux.routes[1].uri=lb://STATION-SERVICE
spring.cloud.gateway.server.webflux.routes[1].predicates[0]=Path=/api/stations/**
spring.cloud.gateway.server.webflux.routes[1].filters[0]=RewritePath=/api(?<segment>.*), ${segment}

spring.cloud.gateway.server.webflux.routes[2].id=auth-service
spring.cloud.gateway.server.webflux.routes[2].uri=lb://AUTH-SERVICE
spring.cloud.gateway.server.webflux.routes[2].predicates[0]=Path=/api/auth/**
spring.cloud.gateway.server.webflux.routes[2].filters[0]=RewritePath=/api(?<segment>.*), ${segment}

spring.cloud.gateway.server.webflux.routes[3].id=booking-service
spring.cloud.gateway.server.webflux.routes[3].uri=lb://BOOKING-SERVICE
spring.cloud.gateway.server.webflux.routes[3].predicates[0]=Path=/api/bookings/**
spring.cloud.gateway.server.webflux.routes[3].filters[0]=RewritePath=/api(?<segment>.*), ${segment}


spring.cloud.gateway.server.webflux.routes[4].id=eureka-server
spring.cloud.gateway.server.webflux.routes[4].uri=http://localhost:8761
spring.cloud.gateway.server.webflux.routes[4].predicates[0]=Path=/eureka/**
#spring.cloud.gateway.server.webflux.routes[3].filters[0]=RewritePath=/eureka(?<segment>.*), ${segment}

#logging.level.root=INFO
#logging.level.org.springframework.cloud.gateway.RouteDefinitionLoader=INFO
#logging.level.org.springframework.cloud.gateway=TRACE
#logging.level.org.springframework.cloud.gateway.filter.RewritePathGatewayFilterFactory=DEBUG



